#!/usr/bin/env bash
set -uo pipefail;

####################################
# Ensure we can execute standalone #
####################################
function early_death() {
  echo "[FATAL] ${0}: ${1}" >&2;
  exit 1;
};

if [ -z "${KZENV_ROOT:-""}" ]; then
  # http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
  readlink_f() {
    local target_file="${1}";
    local file_name;

    while [ "${target_file}" != "" ]; do
      cd "$(dirname ${target_file})" || early_death "Failed to 'cd \$(dirname ${target_file})' while trying to determine KZENV_ROOT";
      file_name="$(basename "${target_file}")" || early_death "Failed to 'basename \"${target_file}\"' while trying to determine KZENV_ROOT";
      target_file="$(readlink "${file_name}")";
    done;

    echo "$(pwd -P)/${file_name}";
  };

  KZENV_ROOT="$(cd "$(dirname "$(readlink_f "${0}")")/.." && pwd)";
  [ -n ${KZENV_ROOT} ] || early_death "Failed to 'cd \"\$(dirname \"\$(readlink_f \"${0}\")\")/..\" && pwd' while trying to determine KZENV_ROOT";
else
  KZENV_ROOT="${KZENV_ROOT%/}";
fi;
export KZENV_ROOT;

if [ -n "${KZENV_HELPERS:-""}" ]; then
  log 'debug' 'KZENV_HELPERS is set, not sourcing helpers again';
else
  [ "${KZENV_DEBUG:-0}" -gt 0 ] && echo "[DEBUG] Sourcing helpers from ${KZENV_ROOT}/lib/helpers.sh";
  if source "${KZENV_ROOT}/lib/helpers.sh"; then
    log 'debug' 'Helpers sourced successfully';
  else
    early_death "Failed to source helpers from ${KZENV_ROOT}/lib/helpers.sh";
  fi;
fi;

# Ensure libexec and bin are in $PATH
for dir in libexec bin; do
  case ":${PATH}:" in
    *:${KZENV_ROOT}/${dir}:*) log 'debug' "\$PATH already contains '${KZENV_ROOT}/${dir}', not adding it again";;
    *) 
      log 'debug' "\$PATH does not contain '${KZENV_ROOT}/${dir}', prepending and exporting it now";
      export PATH="${KZENV_ROOT}/${dir}:${PATH}";
      ;;
  esac;
done;

#####################
# Begin Script Body #
#####################

declare arg="${1:-""}";

log 'debug' "Setting KZENV_DIR to ${PWD}";
export KZENV_DIR="${PWD}"

abort() {
  log 'debug' 'Aborting...';
  {
    if [ "${#}" -eq 0 ]; then
      cat -;
    else
      echo "kzenv: ${*}";
    fi;
  } >&2;
};

log 'debug' "KZENV argument is: ${arg}";

case "${arg}" in
  "")
    log 'debug' 'No argument provided, dumping version and help and aborting';
    {
      kzenv---version;
      kzenv-help;
    } | abort && exit 1;
exit 1;
    ;;
  -v | --version )
    log 'debug' 'KZENV version requested...';
    exec kzenv---version;
    ;;
  -h | --help )
    log 'debug' 'KZENV help requested...';
    exec kzenv-help;
    ;;
  *)
    log 'debug' "Long argument provided: ${arg}";
    command_path="$(command -v "KZENV-${arg}" || true)";
    log 'debug' "Resulting command-path: ${command_path}";
    if [ -z "${command_path}" ]; then
      {
        echo "No such command '${arg}'";
        kzenv-help;
      } | abort && exit 1;
    fi;
    shift 1;
    log 'debug' "Exec: \"${command_path}\" \"${@}\"";
    exec "${command_path}" "${@}";
    ;;
esac;

log 'error' 'This line should not be reachable. Something catastrophic has occurred';
